
package dbms_assign2;

import static dbms_assign2.DrivingClass.con;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;


public class card extends javax.swing.JFrame {

    String emailID;
    String Amount;
    private boolean cardValid = false;
    private boolean cvvValid = false;
    private int okButton;
     browse br;
    /**
     * Creates new form card
     */
    public card(String emailID, String amount, browse br) {
        this.br  = br;
        this.emailID = emailID;
        this.Amount = amount;
        initComponents();
        amt.setText(this.Amount);
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("tt.png")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox3 = new javax.swing.JComboBox<>();
        name = new javax.swing.JTextField();
        cnumber = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cvv = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        disp = new javax.swing.JLabel();
        amt = new javax.swing.JLabel();

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tressure Oak");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("CARD MODE PAYMENT :");

        jLabel2.setText("NAME : ");

        jLabel3.setText("CARD NUMBER : ");

        jLabel4.setText("CARD EXPIRY : ");

        jComboBox1.setMaximumRowCount(6);
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "JANUARY", "FEBRARY", "MARCH", "APRIL", "MAY", "JUNE", "JULY", "AUGUST", "SEPTEMBER", "OCTOBER", "NOVEMBER", "DECEMBER" }));

        jComboBox3.setMaximumRowCount(6);
        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034", "2035", "2036", "2037", "2038", "2039", "2040" }));

        name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameActionPerformed(evt);
            }
        });

        jLabel5.setText("CVV : ");

        jButton1.setText("PAY");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("<-- BACK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        disp.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        disp.setText("Payable Amount :");

        amt.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        amt.setPreferredSize(new java.awt.Dimension(10, 10));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cnumber))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(32, 32, 32)
                                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cvv, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 149, Short.MAX_VALUE)
                        .addComponent(disp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(amt, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(amt, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(disp)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cnumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cvv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 101, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
            
        try{
            new CheckOut(this.emailID, br);
            setVisible(false);
        }catch (SQLException ex) {
            Logger.getLogger(card.class.getName()).log(Level.SEVERE, null, ex);
        }
            
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        if((cnumber.getText().equals("") || name.getText().equals("") || cvv.getText().equals(""))){
            JOptionPane.showMessageDialog(null,"Please Enter in All Fields", "Fill in the fields", JOptionPane.INFORMATION_MESSAGE);
        }else{
           try{  
           Long.parseLong(cnumber.getText());
           if(cnumber.getText().length() != 16){
               JOptionPane.showMessageDialog(null,"Enter a Valid Card Number", "Invalid Card Number", JOptionPane.INFORMATION_MESSAGE);
           }else{
               cardValid = true;
           }
          }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null,"Enter a Valid Card Number", "Invalid Card Number", JOptionPane.INFORMATION_MESSAGE);
          }
          
          try{
               Integer.parseInt(cvv.getText());
               
               if(cvv.getText().length() != 3){
                    JOptionPane.showMessageDialog(null,"Enter a Valid CC Number", "Invalid CVV Number", JOptionPane.INFORMATION_MESSAGE);
          }else{
                   cvvValid = true;
               }
          }catch(NumberFormatException e){
              JOptionPane.showMessageDialog(null,"Enter a Valid CCV Number", "Invalid CVV Number", JOptionPane.INFORMATION_MESSAGE);
          }
        } 
      if(cardValid && cvvValid){
        
        okButton = JOptionPane.showConfirmDialog(null,"Payment Successfull, Your Order is on the Way", "Success",JOptionPane.DEFAULT_OPTION,JOptionPane.PLAIN_MESSAGE);
             if(JOptionPane.OK_OPTION == okButton || JOptionPane.CANCEL_OPTION == okButton){
                
                setVisible(false);
                super.setVisible(false);
                try {
                     updateOrderData(this.emailID);
                     super.setDefaultCloseOperation(EXIT_ON_CLOSE);
                     br.dispose();
                     new browse(this.emailID).setVisible(true);
                     
                 } catch (SQLException ex) {
                     Logger.getLogger(UPI.class.getName()).log(Level.SEVERE, null, ex);
                 }
             }
          
      }
    }//GEN-LAST:event_jButton1ActionPerformed
   
    private void nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameActionPerformed


    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel amt;
    private javax.swing.JTextField cnumber;
    private javax.swing.JTextField cvv;
    private javax.swing.JLabel disp;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField name;
    // End of variables declaration//GEN-END:variables

    private void updateOrderData(String emailID) throws SQLException {
        
          int totalOrders = 0;
        int update = -1;
        con = DriverManager.getConnection("jdbc:mysql://localhost:3306/tt?autoReconnect=true&useSSL=false","root","toor");

        
        PreparedStatement st =con.prepareCall("SELECT count(order_id) FROM orders");
        
        ResultSet rt = st.executeQuery();
        while(rt.next()){
            
        totalOrders = Integer.parseInt(rt.getString(1));
        
        
    }
        
        st = con.prepareCall("SELECT * FROM cart WHERE emailID = ?");
        st.setString(1, this.emailID);
        rt = st.executeQuery();
        
        Connection localCon = con;
        ResultSet localRt;
        PreparedStatement localSt;
        while(rt.next()){
            
            localSt = localCon.prepareCall("INSERT INTO userorder (emailID, furnitureID) VALUES (?, ?)");
            localSt.setString(1, rt.getString(1));
            localSt.setString(2, rt.getString(2));
            localSt.executeUpdate();
        }
     st = con.prepareCall("DELETE FROM cart WHERE emailID = ?");
     st.setString(1, this.emailID);
     st.executeUpdate();
            
            localSt = localCon.prepareCall("INSERT INTO orders (order_id, email_addr, delivery_addr, total_price_purchased, date_purchased) VALUES (?, ?, ?, ?, ?)");
            localSt.setString(1, Integer.toString(totalOrders + 1));
            localSt.setString(2, this.emailID);
            localSt.setString(3, CheckOut.customerAddress);
            localSt.setString(4, this.Amount);
            Timestamp ts=new Timestamp(new Date().getTime());  
            SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");  
            localSt.setString(5,formatter.format(ts));
            
         localSt.executeUpdate();
        
        
}
        

}
